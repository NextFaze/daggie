apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId 'com.nextfaze.daggie.sample'
        minSdkVersion 21
        targetSdkVersion 28
        multiDexEnabled true
        versionCode 1
        versionName '1.0'

        // Dev proxy settings
        buildConfigField('String', 'DEV_PROXY_HOST', "\"${getStringProperty('androidDevProxyHost', '')}\"")
        buildConfigField('int', 'DEV_PROXY_PORT', "${getIntegerProperty('androidDevProxyPort', 0)}")
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        disable 'AllowBackup', 'UnusedResources', 'GoogleAppIndexingWarning', 'InvalidPackage'
        abortOnError getBoolProperty('lintAbortOnError', false)
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        preDexLibraries = getBoolProperty('dexPreDexLibraries', true)
    }

    kapt {
        correctErrorTypes = true
    }
}

dependencies {
    implementation project(':daggie')
    implementation project(':daggie-slf4j')
    implementation project(':daggie-logback')
    implementation project(':daggie-rxjava2')
    implementation project(':daggie-manup')
    implementation project(':daggie-foreground')
    implementation project(':daggie-okhttp')
    implementation project(':daggie-threeten')
    implementation project(':daggie-jodatime')
    implementation project(':daggie-glide')
    implementation project(':daggie-permissions')
    implementation project(':daggie-gson')
    implementation project(':daggie-moshi')
    implementation project(':daggie-autodispose')
    debugImplementation project(':daggie-leakcanary')
    debugImplementation project(':daggie-stetho')
    debugImplementation project(':daggie-devproxy')
    implementation rootProject.ext.androidXAppCompat

    // Glide
    kapt rootProject.ext.glideCompiler

    // Dagger
    kapt rootProject.ext.daggerCompiler
    implementation rootProject.ext.dagger
    implementation rootProject.ext.daggerAnnotations

    // JUnit
    testImplementation rootProject.ext.junit
}

def getStringProperty(String name, String defaultValue) {
    return hasProperty(name) ? project.properties[name].toString() : defaultValue
}

def getBoolProperty(String name, boolean defaultValue) {
    return new Boolean(hasProperty(name) ? project.properties[name].toBoolean() : defaultValue)
}

def getIntegerProperty(String name, int defaultValue) {
    return hasProperty(name) ? project.properties[name].toInteger() : defaultValue
}
